using News_Event;
using System.Collections;
using System.Collections.Generic;
using System.Linq.Expressions;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.UI;

public class dialogue : MonoBehaviour
{
    //"UI???"?????????unity??
    [Header("UI???")]

    //?????????????
    public Text dialog;

    [Header("??????")]
    //??????????
    int index;

    //?????б?洢???????
    List<string> textList = new List<string>();

    [Header("????????")]

    //?????????????????
    public float speed = 0.1f;

    //??????????????????????????????
    public bool isFinish = true;

    //????????????????????????????
    bool cancelType = false;

    public string talk=" ";

    public static dialogue Instance { get; private set; }

    
    void Awake()
    {
        Instance = this;
  
    }

    private void OnEnable()
    {
        //?????????list
        GetTextToList(talk);
    }

    public void Say()
    {
        if (talk == null) return;
        Debug.Log(talk+"");
        GetTextToList(talk);
        StartCoroutine(SetText());
    }

    void Update()
    {
        if (isFinish)
        {
            Display();
        }

    }

    public void Display()
    {
            if (index == textList.Count||talk==null)//?????????
            {
                
                index = 0;
                gameObject.SetActive(false);
                return;
            }


            if (isFinish && !cancelType)
            {
                GetTextToList(talk);//如能
                //??Э???????????????????
                StartCoroutine(SetText());
                
            }
            else if (!isFinish && !cancelType){
                cancelType = true;
            }
        
    }

    //????????????и???????list
    void GetTextToList(string talk)
    {
        //??????б?????
        textList.Clear();
        index = 0;

        textList.Add(talk);
        
    }

    //????????????????
    IEnumerator SetText()
    {
        isFinish = false;
        dialog.text = "";//????????

        int i = 0;
        
        while (!cancelType && i < textList[index].Length)
        {
            dialog.text += textList[index][i];//?????????????
            i++;
            yield return new WaitForSeconds(speed);//???
        }

        //cancelType?true????????????仰
        dialog.text = textList[index];
        cancelType = false;

        isFinish = true;
        index++;
    }
}
